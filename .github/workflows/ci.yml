name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main

env:
  REGISTRY_LOGIN: ${{ secrets.REGISTRY_LOGIN }}
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  ENV: ${{ secrets.DEV_ENV }}
  SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
  SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
  SERVER_IP: ${{ secrets.SERVER_IP }}
  COMPOSE_PATH: ${{ secrets.COMPOSE_PATH }}

jobs:
  build:
    name: Build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker registry
        run: docker login -u $REGISTRY_LOGIN -p $REGISTRY_PASSWORD

      - name: Build Docker image
        run: |
          IMAGE_NAME=$REGISTRY_LOGIN/${{ github.repository }}:${{ github.sha }}
          printf "%s" "$ENV" >> .env
          docker build . -t $IMAGE_NAME
          docker push $IMAGE_NAME

  test:
    name: Test
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker registry
        run: echo $REGISTRY_PASSWORD | docker login -u $REGISTRY_LOGIN -p $REGISTRY_PASSWORD

      - name: Pull Docker image
        run: |
          IMAGE_NAME=$REGISTRY_LOGIN/${{ github.repository }}:${{ github.sha }}
          docker pull $IMAGE_NAME
          docker run $IMAGE_NAME php artisan test || (echo "Tests failed" && docker rmi $IMAGE_NAME && exit 1)

  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    needs: test

    steps:
      - name: Install ssh key
        run: |
          ssh-keygen -t rsa -b 4096 -C "$SERVER_USERNAME@$SERVER_IP" -q -N ""
          ssh-copy-id -i ~/.ssh/id_rsa.pub $SERVER_USERNAME@$SERVER_IP

      - name: Deploy to server
        run: |
          ssh $SERVER_USERNAME@$SERVER_IP <<EOF
            docker compose -f $COMPOSE_PATH pull
            docker compose -f $COMPOSE_PATH up -d
          EOF
