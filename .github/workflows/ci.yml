name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main

env:
  REGISTRY_LOGIN: ${{ vars.REGISTRY_LOGIN }}
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  ENV: ${{ secrets.DEV_ENV }}
  SERVER_SSH_KEY: ${{ secrets.SERVER_KEY }}
  SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
  SERVER_IP: ${{ secrets.SERVER_IP }}
  COMPOSE_PATH: ${{ vars.COMPOSE_PATH }}
  REPO_NAME: ${{ vars.REPO_NAME }}

jobs:
#  build:
#    name: Build
#    if: github.event_name == 'push'
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Login to Docker registry
#        run: docker login -u $REGISTRY_LOGIN -p $REGISTRY_PASSWORD
#
#      - name: Build Docker image
#        run: |
#          IMAGE_NAME=$REGISTRY_LOGIN/$REPO_NAME:${{ github.sha }}
#          printf "%s" "$ENV" >> .env
#          docker build . -t $IMAGE_NAME
#          docker push $IMAGE_NAME
#
#  test:
#    name: Test
#    runs-on: ubuntu-latest
#
#    needs: build
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Login to Docker registry
#        run: echo $REGISTRY_PASSWORD | docker login -u $REGISTRY_LOGIN -p $REGISTRY_PASSWORD
#
#      - name: Pull Docker image
#        run: |
#          IMAGE_NAME=$REGISTRY_LOGIN/$REPO_NAME:${{ github.sha }}
#          docker pull $IMAGE_NAME
#          docker run $IMAGE_NAME php artisan test || (echo "Tests failed" && docker rmi $IMAGE_NAME && exit 1)

  deploy:
    name: Deploy
#    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: SSH and deploy Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: 22
          script: |
            docker-compose -f docker-compose.yml pull
            docker-compose -f docker-compose.yml up -d

#      - name: Deploy with Docker Compose
#        run: |
#          echo $SERVER_SSH_KEY > id_rsa.pub
#          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} -i id_rsa.pub "cd  $COMPOSE_PATH && docker-compose pull && docker-compose up -d"
#          rm id_rsa.pub

